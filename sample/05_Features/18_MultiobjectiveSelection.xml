<operator name="Root" class="Process">
  <description text="#ylt#p#ygt#This is another very simple genetic feature selection approach. Due to another selection scheme, the feature selection operator not only tries to maximize the performance delivered by the feature set evaluator but also tries to minimize the number of features. The result is a Pareto front plotted during optimization.#ylt#/p#ygt#

#ylt#p#ygt#After the optimization has finished, the user can double click on the Pareto-optimal solutions and see which feature set is represented by which point. The Pareto front does not only give insight into the total number of necessary features but also into the trade-off between number of features and performance and into a ranking of features.#ylt#/p#ygt#"/>
  <operator name="ExampleSetGenerator" class="ExampleSetGenerator">
    <parameter key="number_examples"	value="200"/>
    <parameter key="number_of_attributes"	value="10"/>
    <parameter key="target_function"	value="sum classification"/>
  </operator>
  <operator name="NoiseGenerator" class="NoiseGenerator">
    <parameter key="label_noise"	value="0.0"/>
    <list key="noise">
    </list>
    <parameter key="random_attributes"	value="10"/>
  </operator>
  <operator name="GeneticAlgorithm" class="GeneticAlgorithm">
    <parameter key="maximum_number_of_generations"	value="15"/>
    <parameter key="p_mutation"	value="0.1"/>
    <parameter key="plot_generations"	value="1"/>
    <parameter key="population_size"	value="30"/>
    <parameter key="selection_scheme"	value="non dominated sorting"/>
    <parameter key="show_population_plotter"	value="true"/>
    <operator name="CFSFeatureSetEvaluator" class="CFSFeatureSetEvaluator">
      <parameter key="keep_example_set"	value="true"/>
    </operator>
    <operator name="AttributeCounter" class="AttributeCounter">
    </operator>
  </operator>
</operator>

