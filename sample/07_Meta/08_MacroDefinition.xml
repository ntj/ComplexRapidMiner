<operator name="Root" class="Process">
  <description text="#ylt#p#ygt#In this experiment several macros are used. The experiment root operator uses  the predefined macro %{experiment_name} in order to create a log file with the same base name as the experiment file. The operator MacroDefinition is then used to define a macro for an in- and output file which is used at several places of the experiment (in this toy example only twice). The macro is defined in the parameter list #yquot#macros#yquot# of this operator. Users can define arbitrarily macros in addition to the predefined macros. All macros are enclosed with %{ and } during usage.#ylt#/p#ygt#  #ylt#p#ygt#In addition to these high-level macros, several predefined parameter extensions exist like %a (replaced by the number of times the operator was called) or %t (the current time). Please refer to the written tutorial for more information about this topic.#ylt#/p#ygt#"/>
  <parameter key="logfile"	value="%{experiment_name}.log"/>
  <operator name="MacroDefinition" class="MacroDefinition">
    <list key="macros">
      <parameter key="iocfile"	value="all_objects"/>
    </list>
  </operator>
  <operator name="IOContainerWriter" class="IOContainerWriter">
    <parameter key="filename"	value="%{experiment_name}_%{iocfile}.ioc"/>
    <parameter key="zipped"	value="false"/>
  </operator>
  <operator name="IOContainerReader" class="IOContainerReader">
    <parameter key="filename"	value="%{experiment_name}_%{iocfile}.ioc"/>
    <parameter key="method"	value="replace"/>
  </operator>
</operator>

