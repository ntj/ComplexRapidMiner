<operator name="Root" class="Process">
  <description text="#ylt#p#ygt#This experiment loads the golf data and merges two of the nominal values: #yquot#rain#yquot# and #yquot#overcast#yquot#. After this preprocessing step another operator is applied which uses regular expressions to remove attributes from a given example set. Of course simple attribute names can also be defined. In this case only attributes which ends on #yquot#e#yquot# are removed and the attribute #yquot#Wind#yquot#. Please refer to the Java documentation of regular expressions.#ylt#/p#ygt##ylt#p#ygt#The last preprocessing operator of this experiment removes all examples with Humidity greater than 80.#ylt#/p#ygt#"/>
  <operator name="ExampleSource" class="ExampleSource">
    <parameter key="attributes"	value="../data/golf.aml"/>
  </operator>
  <operator name="MergeNominalValues" class="MergeNominalValues">
    <parameter key="attribute_name"	value="Outlook"/>
    <parameter key="first_value"	value="sunny"/>
    <parameter key="second_value"	value="rain"/>
  </operator>
  <operator name="FeatureNameFilter" class="FeatureNameFilter">
    <parameter key="skip_features_with_name"	value=".*e|Wind"/>
  </operator>
  <operator name="ExampleFilter" class="ExampleFilter">
    <parameter key="condition_class"	value="attribute_value_filter"/>
    <parameter key="parameter_string"	value="Humidity &gt;= 80"/>
  </operator>
</operator>

