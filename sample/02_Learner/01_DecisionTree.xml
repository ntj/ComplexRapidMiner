<?xml version="1.0" encoding="UTF-8"?>
<process version="4.0beta">

  <operator name="Root" class="Process">
      <description text="#ylt#table#ygt##ylt#tr#ygt##ylt#td#ygt##ylt#p#ygt#This experiment starts with loading the data. After finishing the input operator a typical learning step is performed. Here, an implementation of a decision tree learner is used which also can handle numerical values (similar to the well known C4.5 algorithm).#ylt#/p#ygt##ylt#/td#ygt##ylt#td#ygt##ylt#icon#ygt#groups/24/learner#ylt#/icon#ygt##ylt#/td#ygt##ylt#/tr#ygt##ylt#/table#ygt##ylt#p#ygt#Each operator may demand some input and delivers some output. These in- and output types are passed between the operators. In this example the first operator #yquot#Input#yquot# does not demand input and delivers an example set as output. This example set is consumed by the learner which delivers the final output: the learned model. #ylt#/p#ygt##ylt#p#ygt#Since this is a linear data flow such an experiment design is called #yquot#operator chain#yquot#. Later we will see more sophisticated experiments in the form of operator trees.#ylt#/p#ygt##ylt#p#ygt#Try the following:#ylt#/p#ygt##ylt#ul#ygt##ylt#li#ygt#Press the #yquot#Play#yquot# icon in the icon bar at the top of the frame. The experiment should start and after a short time the message viewer in the bottom part of the frame shows the message that the experiment was successfully finished. The main frame changes to #yquot#Result#yquot# view which shows the learned decision tree (a hypothesis which is called Model in RapidMiner). #ylt#table#ygt##ylt#tr#ygt##ylt#td#ygt##ylt#icon#ygt#24/media_play#ylt#/icon#ygt##ylt#/td#ygt##ylt#td#ygt##ylt#i#ygt##yquot#Play#yquot# button to start the experiment#ylt#/td#ygt##ylt#/tr#ygt##ylt#/table#ygt##ylt#/li#ygt##ylt#li#ygt#Change back to the edit mode (either via the View menu entry, via the icon in the upper right corner, or via the shortcut F9). 
Replace the learner by another learning scheme for classification tasks (right click on decision tree learner and replace operator). You can use the LibSVM for example. After running the changed experiment the new model is presented.#ylt#table#ygt##ylt#tr#ygt##ylt#td#ygt##ylt#icon#ygt#groups/24/learner#ylt#/icon#ygt##ylt#/td#ygt##ylt#td#ygt##ylt#i#ygt#Replace the decision tree learner by a Support Vector Machine.#ylt#/i#ygt##ylt#/td#ygt##ylt#/tr#ygt##ylt#/table#ygt##ylt#/li#ygt##ylt#/ul#ygt#"/>
      <operator name="Input" class="ExampleSource">
          <parameter key="attributes"	value="../data/golf.aml"/>
      </operator>
      <operator name="DecisionTree" class="DecisionTree">
      </operator>
  </operator>

</process>
